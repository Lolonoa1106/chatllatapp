var _path, _defs;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import * as React from "react";
function SvgTokenSwap(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: 52,
    height: 53,
    viewBox: "0 0 52 53",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M38.6213 14.5514C38.6213 14.1596 38.9388 13.8422 39.3294 13.8422C40.5331 13.8422 41.5122 12.9505 41.5122 11.8538C41.5122 10.757 40.5332 9.8642 39.3294 9.8642H35.4952V19.2375H39.3294C40.5331 19.2375 41.5122 18.3458 41.5122 17.2491C41.5122 16.1524 40.5332 15.2595 39.3294 15.2595C39.1416 15.2593 38.9616 15.1846 38.8289 15.0519C38.6962 14.9191 38.6215 14.7391 38.6213 14.5514ZM41.5252 14.5514C42.3782 15.1743 42.9293 16.1522 42.9293 17.249C42.9293 18.9467 41.6102 20.358 39.8911 20.613V21.6004C39.8911 21.9922 39.5737 22.3089 39.1825 22.3089C38.7914 22.3089 38.474 21.9922 38.474 21.6004V20.6546H37.3071V21.6004C37.3071 21.6934 37.2888 21.7856 37.2532 21.8716C37.2176 21.9576 37.1654 22.0357 37.0996 22.1015C37.0338 22.1673 36.9557 22.2195 36.8697 22.2551C36.7837 22.2907 36.6916 22.309 36.5985 22.3089C36.5055 22.309 36.4133 22.2907 36.3273 22.2551C36.2413 22.2196 36.1632 22.1674 36.0974 22.1016C36.0316 22.0358 35.9794 21.9576 35.9438 21.8716C35.9082 21.7856 35.8899 21.6935 35.89 21.6004V20.6546H34.7866C34.6935 20.6547 34.6013 20.6364 34.5153 20.6008C34.4293 20.5652 34.3512 20.513 34.2853 20.4472C34.2195 20.3814 34.1673 20.3032 34.1318 20.2172C34.0962 20.1312 34.0779 20.039 34.078 19.946V9.15554C34.0782 8.96773 34.1529 8.78767 34.2858 8.65492C34.4186 8.52216 34.5987 8.44757 34.7866 8.44751H35.8899V7.50173C35.8899 7.40868 35.9082 7.31654 35.9438 7.23057C35.9794 7.1446 36.0316 7.06648 36.0974 7.00068C36.1632 6.93488 36.2413 6.88269 36.3273 6.84709C36.4132 6.81149 36.5054 6.79317 36.5984 6.79318C36.7863 6.79324 36.9665 6.86791 37.0994 7.00077C37.2323 7.13364 37.3069 7.31383 37.307 7.50173V8.44751H38.4739V7.50173C38.4739 7.11059 38.7913 6.79318 39.1824 6.79318C39.5736 6.79318 39.891 7.11059 39.891 7.50173V8.48849C41.6101 8.74474 42.9292 10.1565 42.9292 11.8537C42.9293 12.9505 42.3783 13.9278 41.5252 14.5514ZM13.4975 25.2859C13.5906 25.286 13.6828 25.2677 13.7688 25.2321C13.8548 25.1966 13.9329 25.1444 13.9987 25.0786C14.0645 25.0128 14.1167 24.9346 14.1523 24.8486C14.1879 24.7626 14.2062 24.6705 14.2061 24.5774V15.2594H21.8139L20.8164 16.2569C20.3696 16.7038 20.6901 17.4666 21.317 17.4666C21.4099 17.4668 21.502 17.4486 21.5879 17.4131C21.6738 17.3776 21.7518 17.3255 21.8175 17.2597L24.0825 14.9866C24.304 14.6967 24.277 14.3062 24.026 14.0503L21.8176 11.8437C21.752 11.7779 21.674 11.7257 21.5881 11.69C21.5022 11.6544 21.4101 11.636 21.3171 11.636C21.2241 11.636 21.132 11.6544 21.0461 11.69C20.9602 11.7257 20.8822 11.7779 20.8165 11.8437C20.7507 11.9094 20.6984 11.9874 20.6628 12.0733C20.6271 12.1592 20.6087 12.2513 20.6087 12.3443C20.6087 12.4373 20.6271 12.5294 20.6628 12.6153C20.6984 12.7012 20.7507 12.7792 20.8165 12.8448L21.814 13.8423H13.4976C13.3096 13.8424 13.1294 13.9171 12.9965 14.0501C12.8636 14.1831 12.7889 14.3635 12.789 14.5515V24.5775C12.7891 24.7654 12.8638 24.9455 12.9966 25.0784C13.1295 25.2112 13.3097 25.2859 13.4975 25.2859ZM15.9135 38.4786C15.9069 38.4744 15.9004 38.472 15.8944 38.4691C14.3004 37.6943 13.0072 38.1702 11.7784 37.5537C10.6918 36.9782 10.5313 36.3463 10.5135 35.9112C10.5563 35.1693 10.9528 34.645 11.7624 34.2634C11.7672 34.2617 11.7707 34.2593 11.7749 34.2575C12.2778 34.009 12.8651 33.8788 13.5184 33.8705C14.806 33.9139 15.9093 34.1933 16.8919 34.7242C17.2361 34.9102 17.6659 34.783 17.8519 34.4383C17.9413 34.2731 17.9614 34.0792 17.9079 33.8992C17.8544 33.7192 17.7316 33.5678 17.5665 33.4782C16.5566 32.9325 15.4515 32.6086 14.2061 32.495V31.4791C14.2061 31.3861 14.1878 31.294 14.1521 31.2081C14.1165 31.1221 14.0643 31.0441 13.9985 30.9783C13.9327 30.9126 13.8546 30.8604 13.7687 30.8249C13.6827 30.7893 13.5906 30.771 13.4975 30.7711C13.1064 30.7711 12.7889 31.0885 12.7889 31.4791V32.5046C12.1998 32.5801 11.6505 32.7394 11.1518 32.9843C9.52599 33.7541 9.13661 34.9794 9.09626 35.8734C9.09564 35.8906 9.09564 35.9078 9.09626 35.925C9.12393 36.7904 9.49968 37.9605 11.1548 38.8272C12.688 39.5946 14.0116 39.1231 15.2797 39.7456C16.3242 40.2823 16.5048 40.9309 16.5376 41.3892C16.4781 42.1186 16.0768 42.6441 15.2838 43.0358C14.75 43.2932 14.1758 43.4204 13.526 43.427C12.2979 43.4139 11.1678 43.1321 10.0741 42.5662C9.90701 42.48 9.7126 42.4637 9.5335 42.5207C9.3544 42.5778 9.20527 42.7036 9.11883 42.8705C9.07613 42.9531 9.05013 43.0433 9.04231 43.136C9.0345 43.2287 9.04503 43.322 9.0733 43.4106C9.10157 43.4992 9.14703 43.5814 9.20707 43.6524C9.26712 43.7234 9.34057 43.7819 9.42324 43.8246C10.485 44.3744 11.6138 44.7032 12.789 44.8072V45.8171C12.789 45.9102 12.8073 46.0023 12.8429 46.0883C12.8785 46.1743 12.9307 46.2524 12.9965 46.3182C13.0623 46.384 13.1405 46.4362 13.2264 46.4718C13.3124 46.5074 13.4046 46.5257 13.4976 46.5257C13.5907 46.5258 13.6829 46.5075 13.7689 46.4719C13.8549 46.4364 13.9331 46.3842 13.9989 46.3184C14.0647 46.2526 14.1169 46.1744 14.1525 46.0884C14.1881 46.0024 14.2063 45.9102 14.2062 45.8171V44.7995C16.1067 44.57 17.8277 43.4217 17.9548 41.4366C17.9565 41.4089 17.9565 41.3811 17.9548 41.3534C17.9078 40.4925 17.5155 39.2947 15.9135 38.4786ZM22.96 38.6486C22.96 43.8649 18.715 48.1099 13.4975 48.1099C8.28121 48.1099 4.03624 43.8649 4.03624 38.6486C4.03624 33.4311 8.28121 29.1862 13.4975 29.1862C18.715 29.1862 22.96 33.4311 22.96 38.6486ZM24.3772 38.6486C24.3772 44.6472 19.4968 49.527 13.4975 49.527C7.50017 49.527 2.61914 44.6471 2.61914 38.6486C2.61914 32.6501 7.50017 27.7689 13.4975 27.7689C19.4968 27.7689 24.3772 32.65 24.3772 38.6486ZM47.9649 14.5514C47.9649 19.7682 43.7206 24.0132 38.5031 24.0132C33.2862 24.0132 29.0418 19.7682 29.0418 14.5514C29.0418 9.33442 33.2861 5.08945 38.5031 5.08945C43.7206 5.08956 47.9649 9.33453 47.9649 14.5514ZM49.3821 14.5514C49.3821 20.55 44.5022 25.4304 38.5031 25.4304C32.5051 25.4304 27.6247 20.55 27.6247 14.5514C27.6247 8.55338 32.5051 3.67297 38.5031 3.67297C44.5022 3.67297 49.3821 8.55338 49.3821 14.5514ZM39.2116 28.6226V38.6473C39.2118 38.7404 39.1936 38.8326 39.158 38.9187C39.1225 39.0047 39.0703 39.0829 39.0045 39.1487C38.9387 39.2146 38.8605 39.2667 38.7744 39.3023C38.6884 39.3378 38.5962 39.3561 38.5031 39.3559H30.188L31.1854 40.3534C31.6334 40.8013 31.3096 41.5636 30.6849 41.5636C30.4968 41.5636 30.3163 41.489 30.1832 41.3561L27.9195 39.0835C27.766 38.8809 27.7173 38.573 27.8232 38.3761C27.874 38.2819 27.8857 38.2365 27.9766 38.1467L30.1832 35.94C30.249 35.8742 30.3271 35.8219 30.4131 35.7863C30.4991 35.7506 30.5912 35.7323 30.6843 35.7323C30.7774 35.7323 30.8696 35.7506 30.9556 35.7863C31.0415 35.8219 31.1197 35.8742 31.1854 35.94C31.2513 36.0058 31.3035 36.0839 31.3392 36.1699C31.3748 36.2559 31.3932 36.3481 31.3932 36.4411C31.3932 36.5342 31.3748 36.6264 31.3392 36.7124C31.3035 36.7984 31.2513 36.8765 31.1854 36.9423L30.188 37.9386H37.7945V28.6224C37.7945 28.5293 37.8128 28.4371 37.8483 28.3511C37.8839 28.2651 37.9361 28.187 38.0019 28.1212C38.0677 28.0554 38.1459 28.0032 38.2319 27.9676C38.3179 27.932 38.41 27.9137 38.5031 27.9138C38.5962 27.9137 38.6884 27.9319 38.7744 27.9675C38.8605 28.0031 38.9386 28.0553 39.0045 28.1211C39.0703 28.187 39.1225 28.2652 39.158 28.3512C39.1936 28.4373 39.2118 28.5295 39.2116 28.6226Z",
    fill: "url(#paint0_linear_1011_10570)"
  })), _defs || (_defs = /*#__PURE__*/React.createElement("defs", null, /*#__PURE__*/React.createElement("linearGradient", {
    id: "paint0_linear_1011_10570",
    x1: 24.5,
    y1: -2.90002,
    x2: 24.5,
    y2: 56.6,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/React.createElement("stop", {
    stopColor: "#9980C1"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: 1,
    stopColor: "#9980C1",
    stopOpacity: 0
  })))));
}
const ForwardRef = /*#__PURE__*/React.forwardRef(SvgTokenSwap);
export default __webpack_public_path__ + "static/media/token-swap.6bf534fa26108dad28d6629daeb37c14.svg";
export { ForwardRef as ReactComponent };